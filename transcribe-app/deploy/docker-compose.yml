
version: "3.9"
name: transcribe-app

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: transcribe
      POSTGRES_USER: transcribe
      POSTGRES_PASSWORD: transcribe
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - transcribe
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U transcribe -d transcribe"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    networks:
      - transcribe
    restart: unless-stopped

  api:
    build: ../backend
    command: >
      sh -lc "mkdir -p /data/uploads /data/jobs &&
              chown -R 1000:1000 /data || true &&
              uvicorn backend.app:app --host 0.0.0.0 --port 8000 --proxy-headers"
    environment:
      - TRANSCRIBE_STORAGE_DIR=/data
      - TRANSCRIBE_DATABASE_URL=postgresql+psycopg2://transcribe:transcribe@db:5432/transcribe
      - DATABASE_URL=postgresql+psycopg2://transcribe:transcribe@db:5432/transcribe   # เผื่อโค้ดอ่านตัวนี้
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CELERY_EAGER=0
      - MAX_UPLOAD_MB=200
    volumes:
      - ../storage:/data
    ports:
      - "8000:8000"      # เปิดไว้เพื่อเทสต์จากเครื่อง
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      # ตอนนี้เราติดตั้ง curl ไว้แล้ว
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    user: "1000:1000"
    networks:
      - transcribe

  worker:
    build: ../backend
    command: celery -A backend.workers.tasks.celery_app worker --loglevel=info
    environment:
      - TRANSCRIBE_STORAGE_DIR=/data
      - TRANSCRIBE_DATABASE_URL=postgresql+psycopg2://transcribe:transcribe@db:5432/transcribe
      - DATABASE_URL=postgresql+psycopg2://transcribe:transcribe@db:5432/transcribe
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CELERY_EAGER=0
    volumes:
      - ../storage:/data
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      api:
        condition: service_started
    restart: unless-stopped
    user: "1000:1000"
    networks:
      - transcribe


  web:
    build: ../frontend
    depends_on:
      api:
        condition: service_started
    networks:
      - transcribe
    restart: unless-stopped

  nginx:
    image: nginx:1.25
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ../storage:/data:ro
    depends_on:
      api:
        condition: service_started
      web:
        condition: service_started
    ports:
      - "8080:80"
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://localhost/ >/dev/null 2>&1"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - transcribe


volumes:
  db-data:

networks:
  transcribe:
    driver: bridge
